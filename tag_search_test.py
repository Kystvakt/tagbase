# -*- coding: utf-8 -*-
"""tag_search_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gyH_tfpLC9YbqRNWalu3BbjZ1MKRDDwv
"""

!pip install selenium
#코랩에서 구글드라이버 연동
!apt-get update
!apt install chromium-chromedriver
#패키지 호출

from selenium import webdriver
from bs4 import BeautifulSoup
import time
from selenium.webdriver.common.keys import Keys
from urllib.request import urlopen
from urllib.parse import quote_plus
import time
import sys

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')

driver = webdriver.Chrome('chromedriver', options=chrome_options)

"""**1. 지니 태그**"""

# 지니 플레이 리스트 검색
genie_search_url = 'https://www.genie.co.kr/search/searchPlaylist?query=' 
genie_tag_word = input()
genie_url = genie_search_url + genie_tag_word

driver.implicitly_wait(3)
driver.get(genie_url)
driver.maximize_window()

delay = 5
driver.implicitly_wait(delay)

time.sleep(1)
# 지니 첫번째 목록 선택
driver.find_element_by_xpath('//*[@id="body-content"]/div[4]/ul/li[1]/div[2]/div[1]/a').click()

# 지니 제목 리스트
genie_contents = driver.find_elements_by_css_selector('tbody > tr > td.info')

genie_titles = []
for genie_content in genie_contents:
    genie_title = genie_content.find_element_by_css_selector('.title').text
    genie_title = genie_title.replace('TITLE','')
    genie_title = genie_title.strip()
    genie_titles.append(genie_title)
genie_titles[0:14]

"""**2. FLO 태그**"""

# FLO 플레이 리스트 검색
flo_search_url = 'https://www.music-flo.com/search/theme?keyword='
flo_tag_word = input()
flo_url = flo_search_url + flo_tag_word

driver.implicitly_wait(3)
driver.get(flo_url)
driver.maximize_window()

# FLO 인기순 
delay = 5
driver.implicitly_wait(delay)

time.sleep(1)
driver.find_element_by_xpath('//*[@id="POPULAR"]').click()

# FLO 첫번째 목록 선택
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait

WebDriverWait(driver,10).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="main"]/div/div[2]/ul/li[1]/div/div/a'))).send_keys(Keys.ENTER)

# FLO 제목 리스트
flo_contents = driver.find_elements_by_css_selector('tbody > tr > td.info')
flo_titles = []
for flo_content in flo_contents:
    flo_title = flo_content.find_element_by_css_selector('strong.tit__text').text
    flo_title = flo_title.strip()
    flo_titles.append(flo_title)
flo_titles[0:14]

"""**3. 멜론 태그**"""

# 멜론 플레이 리스트 검색
melon_search_url = 'https://www.melon.com/search/dj/index.htm?q='
melon_tag_word = input()
melon_url = melon_search_url + melon_tag_word

driver.implicitly_wait(3)
driver.get(melon_url)
driver.maximize_window()

# 멜론 첫번째 목록 선택
delay = 5
driver.implicitly_wait(delay)

time.sleep(1)
driver.find_element_by_xpath('//*[@id="pageList"]/div/ul/li[1]/div[1]/div/dl/dt/a').click()

# 멜론 제목 리스트
melon_contents = driver.find_elements_by_css_selector('tbody > tr > td > div.wrap > div.wrap_song_info > div.ellipsis.rank01 > span')
melon_contents[0].find_element_by_css_selector('a').text
melon_titles = []
for melon_content in melon_contents:
    melon_title = melon_content.find_element_by_css_selector('a').text
    melon_titles.append(melon_title)
melon_titles[0:14]

